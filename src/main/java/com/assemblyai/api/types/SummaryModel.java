/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.assemblyai.api.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Locale;

public final class SummaryModel {
    public static final SummaryModel INFORMATIVE = new SummaryModel(Value.INFORMATIVE, "informative");

    public static final SummaryModel CATCHY = new SummaryModel(Value.CATCHY, "catchy");

    public static final SummaryModel CONVERSATIONAL = new SummaryModel(Value.CONVERSATIONAL, "conversational");

    private final Value value;

    private final String string;

    SummaryModel(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @Override
    public boolean equals(Object other) {
        return (this == other) || (other instanceof SummaryModel && this.string.equals(((SummaryModel) other).string));
    }

    @Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case INFORMATIVE:
                return visitor.visitInformative();
            case CATCHY:
                return visitor.visitCatchy();
            case CONVERSATIONAL:
                return visitor.visitConversational();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static SummaryModel valueOf(String value) {
        String upperCasedValue = value.toUpperCase(Locale.ROOT);
        switch (upperCasedValue) {
            case "informative":
                return INFORMATIVE;
            case "catchy":
                return CATCHY;
            case "conversational":
                return CONVERSATIONAL;
            default:
                return new SummaryModel(Value.UNKNOWN, upperCasedValue);
        }
    }

    public enum Value {
        INFORMATIVE,

        CONVERSATIONAL,

        CATCHY,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitInformative();

        T visitConversational();

        T visitCatchy();

        T visitUnknown(String unknownType);
    }
}
