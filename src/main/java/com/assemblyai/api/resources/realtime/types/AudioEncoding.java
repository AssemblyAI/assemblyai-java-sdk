/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.assemblyai.api.resources.realtime.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class AudioEncoding {
    public static final AudioEncoding PCM_S16LE = new AudioEncoding(Value.PCM_S16LE, "pcm_s16le");

    public static final AudioEncoding PCM_MULAW = new AudioEncoding(Value.PCM_MULAW, "pcm_mulaw");

    private final Value value;

    private final String string;

    AudioEncoding(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof AudioEncoding && this.string.equals(((AudioEncoding) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case PCM_S16LE:
                return visitor.visitPcmS16le();
            case PCM_MULAW:
                return visitor.visitPcmMulaw();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static AudioEncoding valueOf(String value) {
        switch (value) {
            case "pcm_s16le":
                return PCM_S16LE;
            case "pcm_mulaw":
                return PCM_MULAW;
            default:
                return new AudioEncoding(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        PCM_S16LE,

        PCM_MULAW,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitPcmS16le();

        T visitPcmMulaw();

        T visitUnknown(String unknownType);
    }
}
