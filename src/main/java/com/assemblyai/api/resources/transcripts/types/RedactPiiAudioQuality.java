/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.assemblyai.api.resources.transcripts.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class RedactPiiAudioQuality {
    public static final RedactPiiAudioQuality MP3 = new RedactPiiAudioQuality(Value.MP3, "mp3");

    public static final RedactPiiAudioQuality WAV = new RedactPiiAudioQuality(Value.WAV, "wav");

    private final Value value;

    private final String string;

    RedactPiiAudioQuality(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof RedactPiiAudioQuality
                        && this.string.equals(((RedactPiiAudioQuality) other).string));
    }

    @Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case MP3:
                return visitor.visitMp3();
            case WAV:
                return visitor.visitWav();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static RedactPiiAudioQuality valueOf(String value) {
        switch (value) {
            case "mp3":
                return MP3;
            case "wav":
                return WAV;
            default:
                return new RedactPiiAudioQuality(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        MP3,

        WAV,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitMp3();

        T visitWav();

        T visitUnknown(String unknownType);
    }
}
