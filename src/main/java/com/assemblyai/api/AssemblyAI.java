/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.assemblyai.api;

import com.assemblyai.api.core.ClientOptions;
import com.assemblyai.api.core.Suppliers;
import com.assemblyai.api.resources.files.FilesClient;
import com.assemblyai.api.resources.lemur.LemurClient;
import com.assemblyai.api.resources.realtime.RealtimeClient;
import com.assemblyai.api.resources.transcripts.TranscriptsClient;
import java.util.function.Supplier;

public class AssemblyAI {
    protected final ClientOptions clientOptions;

    protected final Supplier<FilesClient> filesClient;

    protected final Supplier<TranscriptsClient> transcriptsClient;

    protected final Supplier<RealtimeClient> realtimeClient;

    protected final Supplier<LemurClient> lemurClient;

    public AssemblyAI(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.filesClient = Suppliers.memoize(() -> new FilesClient(clientOptions));
        this.transcriptsClient = Suppliers.memoize(() -> new TranscriptsClient(clientOptions));
        this.realtimeClient = Suppliers.memoize(() -> new RealtimeClient(clientOptions));
        this.lemurClient = Suppliers.memoize(() -> new LemurClient(clientOptions));
    }

    public FilesClient files() {
        return this.filesClient.get();
    }

    public TranscriptsClient transcripts() {
        return this.transcriptsClient.get();
    }

    public RealtimeClient realtime() {
        return this.realtimeClient.get();
    }

    public LemurClient lemur() {
        return this.lemurClient.get();
    }

    public static AssemblyAIBuilder builder() {
        return new AssemblyAIBuilder();
    }
}
